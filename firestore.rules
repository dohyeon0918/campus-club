rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // 헬퍼 함수: 사용자가 로그인되어 있는지 확인
    function isSignedIn() {
      return request.auth != null;
    }

    // 헬퍼 함수: 사용자가 특정 허브의 멤버인지 확인
    // function isMemberOf(hubId) {
    //   return isSignedIn() &&
    //          exists(/databases/$(database)/documents/memberships/$(request.auth.uid + '_' + hubId));
    // }

    // users 컬렉션
    match /users/{userId} {
      // 읽기: 로그인한 사용자만
      allow read: if isSignedIn();

      // 생성/수정: 본인의 문서만
      allow create, update: if isSignedIn() && request.auth.uid == userId;

      // 삭제: 본인의 문서만
      allow delete: if isSignedIn() && request.auth.uid == userId;
    }

    // hubs 컬렉션
    match /hubs/{hubId} {
      // 읽기: 모두 가능 (로그인 안 해도 허브 목록 볼 수 있음)
      allow read: if true;

      // 생성: 로그인한 사용자만
      allow create: if isSignedIn();

      // 수정: 허브 소유자 또는 memberCount만 변경하는 경우
      allow update: if isSignedIn() && (
        request.auth.uid == resource.data.ownerId ||
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['memberCount'])
      );

      // 삭제: 허브 소유자만
      allow delete: if isSignedIn() && request.auth.uid == resource.data.ownerId;
    }

    // memberships 컬렉션
    match /memberships/{membershipId} {
      // 읽기: 모두 가능
      allow read: if true;

      // 생성: 로그인한 사용자가 자신의 멤버십만 생성
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.userId;

      // 삭제: 자신의 멤버십만 삭제 가능
      allow delete: if isSignedIn() && request.auth.uid == resource.data.userId;
    }

    // posts 컬렉션
    match /posts/{postId} {
      // 읽기: 로그인한 사용자만 (멤버 체크는 클라이언트에서)
      allow read: if isSignedIn();

      // 생성: 로그인한 사용자가 자신을 작성자로
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.authorId;

      // 수정: 작성자 또는 commentCount만 변경하는 경우
      allow update: if isSignedIn() && (
        request.auth.uid == resource.data.authorId ||
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['commentCount'])
      );

      // 삭제: 작성자만
      allow delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
    }

    // comments 컬렉션
    match /comments/{commentId} {
      // 읽기: 로그인한 사용자만
      allow read: if isSignedIn();

      // 생성: 로그인한 사용자가 자신을 작성자로
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.authorId;

      // 삭제: 작성자만
      allow delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
    }
  }
}
